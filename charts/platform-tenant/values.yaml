# Default values for platform-tenant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""
# title formatted name of tenant
title: ""
# crdCheck for installed CRDS
crdCheck: true
# The target namespace for this tenant
targetNamespace:
  create: true
  name: ""
  labels: {}
  annotations: {}

commonAnnotations: {}
commonLabels: {}

serviceAccount:
  create: true
  name: ""
  annotations: {}

# flux configs
flux:
  namespace: flux-system
  source:
    create: true
    name: "ssh"
    url: ""
    # If a private repo, this is the secret for the GitRepository
    secretName: ""
    # defaults to
    # ref:
    #   branch: main
    ref: {}
  kustomization:
    create: true
    name: ""
    # any spec other than  `serviceAccountName` and `sourceRef`
    spec: {}

rbac:
  enabled: true
  # Cluster role giving * access to flux resources
  tenantClusterRole:
    create: true
    name: ""
  # Role that gives tenant deployer access to the namespace
  tenantDeploymentRole:
    create: true
    name: ""
    extraRules: []
    # defaults to tenantDeploymentRole.name
    # group to map external objects to like IAM
    groupName: ""

# using kyverno policies
# to add labels/annotations on objects tenant deploys
kyverno:
  enabled: true
  name: ""
  nodeSelector: {}
  tolerations: []
  labels: {}
  annotations: {}

# If loki, prometheus and grafana installed
# this configures a namespaced dashboard.
o11y:
  enabled: true
  # namespace where prometheus resides
  namespace: o11y
  labels: {}
  annotations: {}

# appAuth configures all external (and internal) access to for named applications inside
# of the tenant namespace.
appAuth:
  # proxy application to use for authentication
  proxy:
    enabed: true
    # chart configuration for proxy app
    chart:
      url: https://oauth2-proxy.github.io/manifests
      name: oauth2-proxy
      version: "6.2.7"
    # displayName for sso redirect
    displayName: ""
    # oidcIssuerUrl of the OIDC provider for oauth proxy
    oidcIssuerUrl: ""
    # existingSecret has client-id, client-secret and cookie-secret keys
    existingSecret: ""
    # cookieDomain for proxy
    cookieDomain: ""
    # whitelistDomain for proxy
    whitelistDomain: ""
    # overrideValues for oauth2-proxy chart
    overrideValues: {}

  # apps:
  # - name: "Test-App-1"
  #   existingSecret: "super-secret"
  #   cookieDomain: ".my.domain"
  #   whitelistDomain: ".my.domain"
  #   appUrl: "testapp.my.domain"
  #   proxy:
  #     overrideValues:
  #       extraArgs:
  #         oidc-issuer-url: "sso2.domain"
  apps: []

# certManager config will create certificates based on
# tls credential names
certManager:
  enabled: true
  issuerRef: {}

# Use istio to manage networking
istio:
  # enable all istio CR's
  enabled: true
  # namespace istio is installed in
  namespace: "istio-system"
  # selector for gateways
  selector: {}
  # Gateways.
  #  selector:
  #    istio: ingressgateway
  #  servers:
  #    - port:
  #        number: 443
  #        name: https
  #        protocol: HTTPS
  #      hosts:
  #        - example.com
  #      tls:
  #        mode: SIMPLE
  #        credentialName: example-tls
  gateway: {}
