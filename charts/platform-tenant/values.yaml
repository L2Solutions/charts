# Default values for platform-tenant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""
# Formatted name of tenant
title: ""

# The target namespace for this tenant
targetNamespace:
  create: true
  name: ""
  labels: {}
  annotations: {}

commonAnnotations: {}
commonLabels: {}

serviceAccount:
  create: true
  name: ""
  annotations: {}

# flux configs
flux:
  namespace: flux-system
  source:
    create: true
    name: "ssh"
    url: ""
    # If a private repo, this is the secret for the GitRepository
    secretName: ""
    # defaults to
    # ref:
    #   branch: main
    ref: {}
  kustomization:
    create: true
    name: ""
    # any spec other than  `serviceAccountName` and `sourceRef`
    spec: {}

rbac:
  enable: true
  # Cluster role giving * access to flux resources
  tenantClusterRole:
    create: true
    name: ""
  # Role that gives tenant deployer access to the namespace
  tenantDeploymentRole:
    create: true
    name: ""
    extraRules: []
    # defaults to tenantDeploymentRole.name
    # group to map external objects to like IAM
    groupName: ""

# using kyverno policies
# to add labels/annotations on objects tenant deploys
kyverno:
  enable: true
  name: ""
  nodeSelector: {}
  tolerations: []
  labels: {}
  annotations: {}

# If loki, prometheus and grafana installed
# this configures a namespaced dashboard.
o11y:
  enable: true
  # namespace where prometheus resides
  namespace: o11y
  labels: {}
  annotations: {}

# Use istio to manage networking
istio:
  # enable all istio CR's
  enable: true
  # namespace istio is installed in
  namespace: "istio-system"
  # Gateways.
  #  selector:
  #    istio: ingressgateway
  #  servers:
  #    - port:
  #        number: 443
  #        name: https
  #        protocol: HTTPS
  #      hosts:
  #        - example.com
  #      tls:
  #        mode: SIMPLE
  #        credentialName: example-tls
  gateway: {}
  # will create cert-manager certificates based on
  # tls credential names
  certManager:
    createCerts: true
    issuerRef: {}
