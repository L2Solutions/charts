# Default values for platform-tenant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Prefix for resources in shared namespaces(istio, flux, etc)
prefix: "tenant"
# Override .Release.Name
nameOverride: ""
# Override all naming. Ignores `prefix`
fullnameOverride: ""
# Title Display
title: ""
# crdCheck for installed CRDS
crdCheck: true

annotations: {}
labels: {}

commonAnnotations: {}
commonLabels: {}

components:
  namespace:
    enabled: true
    # Defaults to `[.Values.prefix]-[.Release.Name]`
    name: ""
    annotations: {}
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  # flux configs
  flux:
    namespace: flux-system
    enabled: true
    components:
      source:
        enabled: true
        name: ""
        url: ""
        # If a private repo, this is the secret for the GitRepository
        secretName: ""
        # defaults to
        # ref:
        #   branch: main
        ref: {}
        serviceAccount:
          name: flux-system-source-controller
      kustomization:
        enabled: true
        name: ""
        # any spec other than  `serviceAccountName` and `sourceRef`
        spec: {}
        serviceAccount:
          name: flux-system-source-controller

  rbac:
    enabled: true
    # Cluster role giving * access to flux resources
    tenantClusterRole:
      create: true
      name: ""
    # Role that gives tenant deployer access to the namespace
    tenantDeploymentRole:
      create: true
      name: ""
      extraRules: []
      # defaults to tenantDeploymentRole.name
      # group to map external objects to like IAM
      groupName: ""

  # using kyverno policies
  # to add labels/annotations on objects tenant deploys
  kyverno:
    enabled: true
    # namespace where kyverno is installed
    namespace: "kyverno"
    # serviceAccountName of the kyverno service account
    serviceAccountName: ""
    components:
      metadata:
        enabled: true
        annotations: {}
        labels: {}
      scheduling:
        enabled: true
        nodeSelector: {}
        tolerations: []
      gateway:
        enabled: true
        domains: ""

  # If loki, prometheus and grafana installed
  # this configures a namespaced dashboard.
  o11y:
    enabled: true
    # namespace where prometheus resides
    namespace: o11y
    labels: {}
    annotations: {}

  # authProxy application to use for authentication
  authProxy:
    enabled: true
    namespace: auth-proxy
    providerName: platform-auth-proxy
    cliendId: ""
    # chart configuration for proxy app
    chart:
      url: https://oauth2-proxy.github.io/manifests
      name: oauth2-proxy
      version: "6.2.7"
    # displayName for sso redirect
    displayName: ""
    # issuerUri of the OIDC provider for oauth proxy
    issuerUri: ""
    # jwksUri of the OIDC provider for oauth proxy
    jwksUri: ""
    # existingSecret has client-id, client-secret and cookie-secret keys
    existingSecret: ""
    # cookieDomain for proxy root domain. You have a tentant with base url `tenant.mydomain.com` and set this to
    # cookieDomain: ".tenant.mydomain.com"
    # Such that every app can be `webapp1.tenant.mydomain.com` and `webapp2.tenant.mydomain.com`.
    cookieDomain: ""
    # overrideValues for oauth2-proxy chart
    overrideValues: {}

  # Tenant Apps Configuration
  # Examples:
  # apps:
  #   - name: "test-app-1"
  #     host: "test-app-1.tenant-example.example.com"
  #     service:
  #       port: 8080
  #       host: test-app-1.tenant-example.svc.cluster.local
  #     routingOverride: {}
  #   - name: "test-app-2"
  #     host: "test-app-2.tenant-example.example.com"
  #     service:
  #       port: 8080
  #       host: test-app-2.tenant-example.svc.cluster.local
  #     # "http" or "tls" or "tcp". Exclusion of 'mode' defaults to http
  #     mode: tls
  #     routingOverride: {}
  apps: []

  # certManager config will create certificates based on
  # tls credential names
  certManager:
    enabled: true
    issuerRef: {}

  # Use istio to manage networking
  istio:
    # enable all istio CR's
    enabled: true
    # namespace istio is installed in
    namespace: system-istio
    components:
      gateway:
        enabled: true
        name: ingress
        # namespace of istio gateway component
        namespace: "system-istio-gateway"
      externalAuth:
        enabled: true
        name: oauth2-proxy
      authPolicy:
        enabled: true
        providerName: ""
