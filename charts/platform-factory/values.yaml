# Default values for platform-factory.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Prefix for resources in shared namespaces(istio, flux, etc)
prefix: "factory"
# Override .Release.Name
nameOverride: ""
# Override all naming. Ignores `prefix`
fullnameOverride: ""

components:
  flux:
    enabled: true
    interval: 10m
    namespace: flux-system
  # cert-manager Configuration
  certManager:
    # Enable cert-manager Resources
    enabled: true
    # Certificate `issuerRef``
    issuerRef: {}
  istio:
    enabled: true
    namespace: "system-istio"
    components:
      gateway:
        enabled: true
        # Istio Ingress Gateway Namespace for Apps
        namespace: system-istio-gateway
        # For `app` label selector
        name: ingress
        # Selector - Defaults to `{ app: [name] }`
        selector: {}
  privatebin:
    enabled: false
    name: "privatebin"
    namespace:
      create: true
      name: ""
    host: ""
    chart:
      version: "0.17.0"
      source:
        kind: HelmRepository
        # uses chart's included helm repository name
        name: ""
    annotations: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    labels: {}
    overrideValues: {}
  helmRepositories:
    components:
      privatebin:
        name: privatebin
        url: https://privatebin.github.io/helm-chart
        enabled: true
  # apps are a list applications in already existing namespaces
  # that have istio sidecar injection enabled, mTLS and restrictive auth policies
  # The structure of these arrays are
  #
  # apps:
  #     # name
  #   - name: "" # name of app
  #     namespace: "" # namespace of app
  apps:
    - name: "test-app"
      # namespace of app
      namespace: "test-app"
      host: "myapp.example.com"
      service:
        host: "my-service"
        port: 8080
    - name: "test-app2"
      # namespace of app
      namespace: "test-app"
      host: "myapp2.example.com"
      service:
        host: "my-service2"
        port: 8085

global:
  affinity: {}
  annotations: {}
  labels: {}
  nodeSelector: {}
  tolerations: []
  istioEnabled: true
  skyfjell:
    validate:
      api: true
